version: 2
jobs:
  node:
    working_directory: ~/hotminute
    docker:
      - image: 'circleci/node:12'
    steps:
      - checkout
      - restore_cache:
          key: 'yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}'
      - restore_cache:
          key: 'node-v1-{{ checksum "package.json" }}-{{ arch }}'
      - run: yarn install
      - save_cache:
          key: 'yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}'
          paths:
            - ~/.cache/yarn
      - save_cache:
          key: 'node-v1-{{ checksum "package.json" }}-{{ arch }}'
          paths:
            - node_modules
      - persist_to_workspace:
          root: ~/hotminute
          paths:
            - node_modules
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
  android-app-sharing:
    working_directory: ~/hotminute/android
    environment:
      FL_OUTPUT_DIR: output
      FASTLANE_LANE_1: internal
      FASTLANE_LANE_2: debug
    docker:
      - image: 'circleci/android:api-28-node'
    resource_class: large
    steps:
      - add_ssh_keys:
          name: Add SSH Keys for GitHub
          fingerprints:
            - '04:7a:ad:d7:39:8d:da:22:2f:8d:d0:02:37:47:00:96'
      - checkout:
          path: ~/hotminute
      - attach_workspace:
          at: ~/hotminute
      - restore_cache:
          name: Restore Gems Cache
          key: 'bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}'
      - run:
          name: Install Gems
          command: bundle install
      - save_cache:
          name: Save Gems Cache
          key: 'bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}'
          paths:
            - vendor/bundle
      - run:
          name: Run Jetifier
          command: yarn jetifier || npx jetify
      - run:
          name: Build Debug APK
          command: bundle exec fastlane $FASTLANE_LANE_1
      - run:
          name: 'Fastlane: Deploy Beta'
          command: bundle exec fastlane $FASTLANE_LANE_2
      - store_artifacts:
          path: output
      - store_artifacts:
          name: 'Save Debug APK'
          path: android/app/build/outputs/apk/debug/app-debug.apk
  deploy-android-beta:
    working_directory: ~/hotminute/android
    environment:
      FL_OUTPUT_DIR: output
      FASTLANE_LANE: beta
    docker:
      - image: 'circleci/android:api-28-node'
    resource_class: large
    steps:
      - add_ssh_keys:
          name: Add SSH Keys for GitHub
          fingerprints:
            - '04:7a:ad:d7:39:8d:da:22:2f:8d:d0:02:37:47:00:96'
      - checkout:
          path: ~/hotminute
      - attach_workspace:
          at: ~/hotminute
      - restore_cache:
          name: Restore Gems Cache
          key: 'bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}'
      - run:
          name: Install Gems
          command: bundle install
      - save_cache:
          name: Save Gems Cache
          key: 'bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}'
          paths:
            - vendor/bundle
      - run:
          name: Run Jetifier
          command: yarn jetifier || npx jetify
      - run:
          name: 'Fastlane: Deploy Beta'
          command: bundle exec fastlane $FASTLANE_LANE
      - store_artifacts:
          path: output
  deploy-ios-beta:
    macos:
      xcode: 11.5.0
    working_directory: ~/hotminute
    environment:
      FL_OUTPUT_DIR: output
      FASTLANE_LANE: beta
    shell: /bin/bash --login -o pipefail
    steps:
      - add_ssh_keys:
          name: Add SSH Keys for GitHub
          fingerprints:
            - '04:7a:ad:d7:39:8d:da:22:2f:8d:d0:02:37:47:00:96'
      - checkout
      - run:
          name: Set Ruby Version
          command: echo "ruby-2.5" > ~/.ruby-version
      - restore_cache:
          name: Restore Yarn Cache
          key: 'yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}'
      - restore_cache:
          name: Restore node_modules Cache
          key: 'node-v1-{{ checksum "package.json" }}-{{ arch }}'
      - run: yarn install
      - save_cache:
          name: Save Yarn Cache
          key: 'yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}'
          paths:
            - ~/.cache/yarn
      - save_cache:
          name: Save node_modules Cache
          key: 'node-v1-{{ checksum "package.json" }}-{{ arch }}'
          paths:
            - node_modules
      - restore_cache:
          name: Restore Gem Cache
          key: 'bundle-v1-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}'
      - run:
          name: Install Gems
          command: bundle install
          working_directory: ios
      - save_cache:
          name: Save Gem Cache
          key: 'bundle-v1-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}'
          paths:
            - vendor/bundle
      - run:
          name: 'Fastlane: Deploy Beta Build'
          command: bundle exec fastlane $FASTLANE_LANE
          working_directory: ios
          no_output_timeout: 40m
      - store_artifacts:
          name: Save fastlane Logs
          path: output
workflows:
  version: 2
  build-deploy:
    jobs:
      - node
      - android-app-sharing:
          filters:
            branches:
              ignore:
                - master
                - develop
                - /release-.*/
                - /hotfix-.*/
                - /circleci-.*/
          requires:
            - node
      - deploy-android-beta:
          filters:
            branches:
              only:
                - master
                - develop
                - /release-.*/
                - /hotfix-.*/
                - /circleci-.*/
            tags:
              only:
                - feature-.*-ready
          requires:
            - node
      - deploy-ios-beta:
          filters:
            branches:
              only:
                - master
                - develop
                - /release-.*/
                - /hotfix-.*/
                - /circleci-.*/
            tags:
              only:
                - feature-.*-ready
          requires:
            - node
