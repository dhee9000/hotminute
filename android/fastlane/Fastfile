# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Build Debug APK"
  lane :internal do
    store_password = "HotMinute123!" # prompt(text: "Signing Store Password: ", secure_text: true)
    key_password = "HotMinute123!" #prompt(text: "Alias Key Password: ", secure_text: true)
    releaseFilePath = File.join(Dir.pwd, "..", "app/HotMinute.keystore")
    gradle(task: 'clean')
    increment_version_code(
        gradle_file_path: "app/build.gradle",
    )
    # increment_version_name(
    #     gradle_file_path: "app/build.gradle",
    # )
    gradle(
      task: 'assemble',
      build_type: 'Debug',
      print_command: false,
      properties: {
        "android.injected.signing.store.file" => releaseFilePath,
        "android.injected.signing.store.password" => store_password,
        "android.injected.signing.key.alias" => "HotMinute",
        "android.injected.signing.key.password" => key_password,
      }
    )
  end

  desc "Push Build to Internal App Sharing"
  lane :internal do
    store_password = "HotMinute123!" # prompt(text: "Signing Store Password: ", secure_text: true)
    key_password = "HotMinute123!" #prompt(text: "Alias Key Password: ", secure_text: true)
    releaseFilePath = File.join(Dir.pwd, "..", "app/HotMinute.keystore")
    gradle(task: 'clean')
    increment_version_code(
        gradle_file_path: "app/build.gradle",
    )
    # increment_version_name(
    #     gradle_file_path: "app/build.gradle",
    # )
    gradle(
      task: 'bundle',
      build_type: 'Release',
      print_command: false,
      properties: {
        "android.injected.signing.store.file" => releaseFilePath,
        "android.injected.signing.store.password" => store_password,
        "android.injected.signing.key.alias" => "HotMinute",
        "android.injected.signing.key.password" => key_password,
      }
    )
    internal_url = upload_to_play_store_internal_app_sharing
    ifttt(
      api_key: 'dc8D1k4tQ5PN8AxmquBtxP',
      event_name: 'internal_share_complete',
      value1: internal_url
    )
  end

  desc "Submit a new Beta Build to Play Store"
  lane :beta do
    store_password = "HotMinute123!" # prompt(text: "Signing Store Password: ", secure_text: true)
    key_password = "HotMinute123!" #prompt(text: "Alias Key Password: ", secure_text: true)
    releaseFilePath = File.join(Dir.pwd, "..", "app/HotMinute.keystore")
    gradle(task: 'clean')
    increment_version_code(
        gradle_file_path: "app/build.gradle",
    )
    # increment_version_name(
    #     gradle_file_path: "app/build.gradle",
    # )
    gradle(
      task: 'bundle',
      build_type: 'Release',
      print_command: false,
      properties: {
        "android.injected.signing.store.file" => releaseFilePath,
        "android.injected.signing.store.password" => store_password,
        "android.injected.signing.key.alias" => "HotMinute",
        "android.injected.signing.key.password" => key_password,
      }
    )
    upload_to_play_store(
      track: 'internal',
      release_status: 'draft'
    )
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "clean")
    gradle(
      task: "bundle",
      build_type: "Release",
      print_command: false,
      properties: {
        "android.injected.signing.store.file" => releaseFilePath,
        "android.injected.signing.store.password" => store_password,
        "android.injected.signing.key.alias" => "HotMinute",
        "android.injected.signing.key.password" => key_password,
      }
    )
    upload_to_play_store
  end
end
